@startuml

class HandlerClient {
  - ONLINE_CLIENT_MAP: ConcurrentHashMap<String, Socket>
  - client: Socket
  + HandlerClient(client: Socket)
  + run(): void
  - bye(): void
  - getCurrentUserName(): String
  - privateChat(targetUserName: String, message: String): void
  - groupChat(message: String): void
  - sendMessage(target: Socket, message: String, prefix: boolean): void
  - printOnlineClient(): void
  - register(userName: String): void
}

class ReadDateFromServerThread {
  - client: Socket
  + ReadDateFromServerThread(client: Socket)
  + run(): void
}

class WriteDateToServerThread {
  - client: Socket
  + WriteDateToServerThread(client: Socket)
  + run(): void
}

class Client {
  + main(args: String[]): void
}

HandlerClient --> Socket
HandlerClient --> Map
HandlerClient --> InputStream
HandlerClient --> OutputStream
HandlerClient --> OutputStreamWriter
HandlerClient --> Scanner

ReadDateFromServerThread --> Socket
ReadDateFromServerThread --> InputStream
ReadDateFromServerThread --> Scanner

WriteDateToServerThread --> Socket
WriteDateToServerThread --> OutputStream
WriteDateToServerThread --> OutputStreamWriter

Client --> Socket

@enduml
